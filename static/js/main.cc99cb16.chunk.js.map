{"version":3,"sources":["components/Modal.js","App.js","index.js"],"names":["Modal","_ref","activeModal","currentTitle","currentCaption","actionFlag","onCloseModal","onAction","currentButtonText","react_default","a","createElement","es6","id","onClose","title","caption","actions","type","action","GROUP_ID","group_id","COMMUNITY_ACCESS_TOKEN","access_token","APP_ACCESS_TOKEN","VERSION","v","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startScanFlow","openQRScanner","handleQRResult","QRResult","arguments","length","undefined","setState","sendQRResult","state","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","qr","user","fetchedUser","QRSuccessModal","t0","console","log","stop","activateModal","closeModal","joinToGroup","connect","send","setTimeout","handleModalAction","flag","joinGroup","qrSuccess","activateJoinGroupModal","memberCheck","method","request_id","params","objectSpread","user_id","messagesAllowedCheck","activePanel","isMember","isMessagesAllowed","areaVal","_this2","subscribe","_ref2","detail","data","result","qr_reult","response","is_allowed","before","photo_200","src","description","city","concat","first_name","last_name","components_Modal","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cc99cb16.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {ModalRoot, ModalCard} from '@vkontakte/vkui';\r\n\r\nconst Modal = ({activeModal, currentTitle, currentCaption, actionFlag, onCloseModal, onAction, currentButtonText}) => (\r\n    <ModalRoot activeModal={activeModal}>\r\n        <ModalCard\r\n            id={'MY_MODAL'}\r\n            onClose={() => onCloseModal()}\r\n            title={currentTitle}\r\n            caption={currentCaption}\r\n            actions={[{\r\n                title: currentButtonText,\r\n                type: 'primary',\r\n                action: () => onAction(actionFlag)\r\n            }]}\r\n        >\r\n        </ModalCard>\r\n    </ModalRoot>\r\n);\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport connect from \"@vkontakte/vkui-connect\";\r\nimport {\r\n  Button,\r\n  Avatar,\r\n  Group,\r\n  ListItem,\r\n  Panel,\r\n  PanelHeader,\r\n  View\r\n} from \"@vkontakte/vkui\";\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\nimport axios from \"axios\";\r\n\r\nimport Modal from \"./components/Modal\";\r\n\r\nconst GROUP_ID = { group_id: 185199781 };\r\nconst COMMUNITY_ACCESS_TOKEN = {\r\n  access_token:\r\n    \"9b1957fb4a56d227f2d894046db9b8aa12b7dafbbf6f606c0f7af580dcc06cf12862881c158bc4cf82e09\"\r\n};\r\nconst APP_ACCESS_TOKEN = {\r\n  access_token:\r\n    \"59f1b2e059f1b2e059f1b2e0c5599da582559f159f1b2e004b9e79590e7db44bab8b30c\"\r\n};\r\nconst VERSION = { v: \"5.101\" };\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activePanel: \"home\",\r\n      isMember: false,\r\n      isMessagesAllowed: false,\r\n      fetchedUser: null,\r\n      activeModal: null,\r\n      QRResult: null,\r\n      currentTitle: \"\",\r\n      currentCaption: \"\",\r\n      actionFlag: \"\",\r\n      areaVal: \"\"\r\n    };\r\n  }\r\n\r\n  startScanFlow = () => {\r\n    this.openQRScanner();\r\n  };\r\n\r\n  handleQRResult = (QRResult = \"1111111\") => {\r\n    this.setState({ QRResult });\r\n\r\n    this.sendQRResult(this.state.QRResult);\r\n  };\r\n\r\n  sendQRResult = async () => {\r\n    try {\r\n      await axios.get(\"https://reqres.in/api/users\", {\r\n        qr: this.state.QRResult,\r\n        user: this.state.fetchedUser\r\n      });\r\n\r\n      this.QRSuccessModal();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  activateModal = () => {\r\n    this.setState({ activeModal: \"MY_MODAL\" });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ activeModal: null });\r\n  };\r\n\r\n  joinToGroup = () => {\r\n    connect.send(\"VKWebAppJoinGroup\", GROUP_ID);\r\n  };\r\n\r\n  openQRScanner = () => {\r\n    setTimeout(function() {\r\n      connect.send(\"VKWebAppOpenQR\");\r\n    }, 300);\r\n  };\r\n\r\n  handleModalAction = flag => {\r\n    this.closeModal();\r\n    const flagMap = {\r\n      joinGroup: () => this.joinToGroup(),\r\n      qrSuccess: () => this.openQRScanner()\r\n    };\r\n    flagMap[flag]();\r\n  };\r\n\r\n  activateJoinGroupModal = () => {\r\n    this.setState({\r\n      currentTitle: \"Вступление в группу\",\r\n      currentCaption: \"Для начисления балов подпишитесь на группу и рассылку\",\r\n      currentButtonText: \"Вступить\",\r\n      actionFlag: \"joinGroup\"\r\n    });\r\n    this.activateModal();\r\n  };\r\n\r\n  QRSuccessModal = () => {\r\n    this.setState({\r\n      currentTitle: \"Чек успешно отправлен\",\r\n      currentCaption: \"В ближайшее время мы выполним проверку и начислим балы\",\r\n      currentButtonText: \"Сканировать еще\",\r\n      actionFlag: \"qrSuccess\"\r\n    });\r\n    this.activateModal();\r\n  };\r\n\r\n  memberCheck = () => {\r\n    connect.send(\"VKWebAppCallAPIMethod\", {\r\n      method: \"groups.isMember\",\r\n      request_id: \"groups.isMember\",\r\n      params: {\r\n        user_id: this.state.fetchedUser.id,\r\n        ...GROUP_ID,\r\n        ...APP_ACCESS_TOKEN,\r\n        ...VERSION\r\n      }\r\n    });\r\n  };\r\n\r\n  messagesAllowedCheck = () => {\r\n    connect.send(\"VKWebAppCallAPIMethod\", {\r\n      method: \"messages.isMessagesFromGroupAllowed\",\r\n      request_id: \"messages.isMessagesFromGroupAllowed\",\r\n      params: {\r\n        request_id: \"messages.isMessagesFromGroupAllowed\",\r\n        user_id: this.state.fetchedUser.id,\r\n        ...COMMUNITY_ACCESS_TOKEN,\r\n        ...VERSION,\r\n        ...GROUP_ID\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.startScanFlow();\r\n    this.memberCheck();\r\n    this.messagesAllowedCheck();\r\n    connect.subscribe(({ detail }) => {\r\n      switch (detail.type) {\r\n        case \"VKWebAppGetUserInfoResult\":\r\n          this.setState({ fetchedUser: detail.data });\r\n          break;\r\n        case \"VKWebAppAllowMessagesFromGroupResult\":\r\n          if (\r\n            detail.data.request_id === \"messages.isMessagesFromGroupAllowed\" &&\r\n            detail.data.result\r\n          ) {\r\n            this.setState({ isMessagesAllowed: true });\r\n            this.QRSuccessModal();\r\n          }\r\n          break;\r\n        case \"VKWebAppJoinGroupResult\":\r\n          if (detail.data.result) {\r\n            this.sendQRResult();\r\n          }\r\n          break;\r\n        case \"VKWebAppOpenQRResult\":\r\n          this.handleQRResult(detail.data.qr_reult);\r\n          break;\r\n\r\n        // METHODS\r\n        case \"VKWebAppCallAPIMethodResult\":\r\n          if (\r\n            detail.data.request_id === \"groups.isMember\" &&\r\n            detail.data.response === 0\r\n          ) {\r\n            this.activateJoinGroupModal();\r\n          }\r\n          if (\r\n            detail.data.request_id === \"groups.isMember\" &&\r\n            detail.data.response === 1\r\n          ) {\r\n            this.setState({ isMember: true });\r\n            this.sendQRResult();\r\n          }\r\n\r\n          if (\r\n            detail.data.request_id === \"messages.isMessagesFromGroupAllowed\" &&\r\n            detail.data.response.is_allowed === 1\r\n          ) {\r\n            this.setState({ isMessagesAllowed: true });\r\n            this.QRSuccessModal();\r\n          }\r\n          if (\r\n            detail.data.request_id === \"messages.isMessagesFromGroupAllowed\" &&\r\n            detail.data.response.is_allowed === 0\r\n          ) {\r\n            connect.send(\"VKWebAppAllowMessagesFromGroup\", {\r\n              request_id: \"messages.isMessagesFromGroupAllowed\",\r\n              ...GROUP_ID\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          console.log(\"default\");\r\n      }\r\n    });\r\n    connect.send(\"VKWebAppGetUserInfo\", {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View activePanel={this.state.activePanel}>\r\n        <Panel id={\"home\"}>\r\n          <PanelHeader>Scanner</PanelHeader>\r\n\r\n          {this.state.fetchedUser && (\r\n            <Group title=\"Welcome\">\r\n              <ListItem\r\n                before={\r\n                  this.state.fetchedUser.photo_200 ? (\r\n                    <Avatar src={this.state.fetchedUser.photo_200} />\r\n                  ) : null\r\n                }\r\n                description={\r\n                  this.state.fetchedUser.city &&\r\n                  this.state.fetchedUser.city.title\r\n                    ? this.state.fetchedUser.city.title\r\n                    : \"\"\r\n                }\r\n              >\r\n                {`${this.state.fetchedUser.first_name} ${this.state.fetchedUser.last_name}`}\r\n              </ListItem>\r\n            </Group>\r\n          )}\r\n\r\n          {/* <Button\r\n                        onClick={this.startScanFlow}\r\n                        size=\"xl\"\r\n                        level=\"primary\"\r\n                    >\r\n                        Зарегистрировать чек\r\n                    </Button> */}\r\n\r\n          <Modal\r\n            activeModal={this.state.activeModal}\r\n            currentTitle={this.state.currentTitle}\r\n            currentCaption={this.state.currentCaption}\r\n            actionFlag={this.state.actionFlag}\r\n            currentButtonText={this.state.currentButtonText}\r\n            onCloseModal={this.closeModal}\r\n            onAction={this.handleModalAction}\r\n          />\r\n        </Panel>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vkui-connect';\r\nimport App from './App';\r\n// import registerServiceWorker from './sw';\r\n\r\n// Init VK App\r\nconnect.send('VKWebAppInit', {});\r\nconsole.log('kek', connect.send(\"VKWebAppGetUserInfo\", {}))\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}